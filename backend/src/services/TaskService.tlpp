#include 'tlpp-core.th'

Namespace ProtheusDev.Tasks.Service

#define c_ent CHR(13) + CHR(10)

Class TaskService
  Public Method New() Constructor
  Public Method CreateOrUpdate(jTask as Json, cId as Character)
  Public Method List()
  Public Method Get(cId as Character)
  Public Method Delete(cId as Character)
EndClass

Method New() Class TaskService
return

Method CreateOrUpdate(jTask as Json, cId as Character) Class TaskService
  Local aArea     := FWGetArea() as Array
  Local aAreaSZ1  := SZ1->(FWGetArea()) as Array
  Local oModel    := FwLoadModel("XCADSZ1") as Object
  Local oModelSZ1 := oModel:GetModel("SZ1MASTER") as Object
  Local jResult   := JsonObject():New() as Json
  Local lError    := .F. as Logical
  Local cError    := "" as Character
  Default cId     := nil

  if cId == nil
    oModel:SetOperation(3)
  else
    DbSelectArea("SZ1")
    SZ1->(DbSetOrder(1))
    SZ1->(DbGoTop())

    If !SZ1->(MsSeek(FWxFilial("SZ1") + cId))
      lError := .T.
      cError := "Tarefa não encontrada!"
    elseif SZ1->Z1_FEITO
      lError := .T.
      cError := "Tarefa já concluída!"
    endif
    oModel:SetOperation(4)
  endif

  if !lError
    oModel:Activate()

    if cId != nil
      oModelSZ1:SetValue("Z1_CODIGO", jTask['code'])
      oModelSZ1:SetValue("Z1_FEITO", jTask['done'])
      oModelSZ1:SetValue("Z1_DTFIM", iif(jTask['done'],Date(),nil))
    endif

    oModelSZ1:SetValue("Z1_NOME", jTask['name'])
    oModelSZ1:SetValue("Z1_DESC", jTask['description'])

    If oModel:VldData() .And. oModel:CommitData()
      jResult['error'] := .F.
    else
      jResult['error'] := .T.
      jResult['message'] := oModel:GetErrorMessage()[6]
    endif

    oModel:DeActivate()

  else
    jResult['error'] := .T.
    jResult['message'] := cError
  endif

  FreeObj(oModel)
  FreeObj(oModelSZ1)

  FWRestArea(aArea)
  FWRestArea(aAreaSZ1)
return jResult

Method List() Class TaskService
  Local aArea := FWGetArea() as Array
  Local aAreaSZ1 := SZ1->(FWGetArea()) as Array
  Local cQuery as Character
  Local cAlias as Character
  Local jResult := JsonObject():New() as Json
  Local aResult := {} as Array

  cQuery := "SELECT		Z1_CODIGO, Z1_NOME, Z1_FEITO, Z1_DTFIM" + c_ent
  cQuery += "FROM		  SZ1990 " + c_ent
  cQuery += "WHERE		D_E_L_E_T_ <> '*' " + c_ent

  cAlias := MpSysOpenQuery(cQuery)

  while (cAlias)->(!EOF())
    aadd(aResult, {;
      "code": (cAlias)->(Z1_CODIGO),;
      "name": AllTrim((cAlias)->(Z1_NOME)),;
      "description": "",;
      "done": (cAlias)->(Z1_FEITO) == "T",;
      "dateDone": If(!Empty((cAlias)->(Z1_DTFIM)),STOD((cAlias)->(Z1_DTFIM)),nil);
    })
    (cAlias)->(DbSkip())
  enddo

  (cAlias)->(DbCloseArea())

  jResult:Set(aResult)

  FWRestArea(aArea)
  FWRestArea(aAreaSZ1)
return jResult

Method Get(cId as Character) Class TaskService
  Local aArea     := FWGetArea() as Array
  Local aAreaSZ1  := SZ1->(FWGetArea()) as Array
  Local jResult as Json

  DbSelectArea("SZ1")
  SZ1->(DbSetOrder(1))
  SZ1->(DbGoTop())

  If SZ1->(Msseek(FWxFilial("SZ1") + cId))
    jResult   := JsonObject():New()

    jResult['code']         := SZ1->Z1_CODIGO
    jResult['name']         := AllTrim(SZ1->Z1_NOME)
    jResult['description']  := AllTrim(SZ1->Z1_DESC)
    jResult['done']         := SZ1->Z1_FEITO
    jResult['dateDone']     := iif(!Empty(SZ1->Z1_DTFIM),SZ1->Z1_DTFIM,nil)
  endif

  SZ1->(DbCloseArea())

  FWRestArea(aArea)
  FWRestArea(aAreaSZ1)
return jResult

Method Delete(cId as Character) Class TaskService
  Local aArea     := FWGetArea() as Array
  Local aAreaSZ1  := SZ1->(FWGetArea()) as Array
  Local oModel    := FwLoadModel("XCADSZ1") as Object
  Local aFields   := {} as Array
  Local jResult   := JsonObject():New() as Json

  aadd(aFields, {"Z1_CODIGO", cId})

  DbSelectArea("SZ1")
  SZ1->(DbSetOrder(1))
  SZ1->(DbGoTop())

  If SZ1->(Msseek(FWxFilial("SZ1") + cId))
    If FWMVCRotAuto(oModel, "SZ1", 5, {{"SZ1MASTER", aFields}},nil,.T.)
      jResult['error'] := .F.
    else
      jResult['error'] := .T.
      jResult['message'] := oModel:GetErrorMessage()[6]
    endif
  else
      jResult['error'] := .T.
      jResult['message'] := "Tarefa não encontrada!"
  endif

  SZ1->(DbCloseArea())

  oModel:DeActivate()

  FreeObj(oModel)
  FWRestArea(aArea)
  FWRestArea(aAreaSZ1)
return jResult
